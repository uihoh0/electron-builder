/// <reference types="node" />
import { EventEmitter } from "events";
import { Entry, ZipFileReader } from "./zip";
export interface ZipOptions {
    decodeStrings?: boolean;
    validateEntrySizes?: boolean;
    ignoreComments?: boolean;
}
export declare function openZip(file: string, options?: ZipOptions | null): Promise<ZipFile>;
export declare class ZipFile extends EventEmitter {
    readonly fd: number;
    readonly zipReader: ZipFileReader;
    readonly fileSize: number;
    readonly options: ZipOptions;
    private isOpen;
    constructor(fd: number, zipReader: ZipFileReader, fileSize: number, options: ZipOptions);
    readEntries(): Promise<Array<Entry>>;
    close(): Promise<void>;
    readEntryData(entry: Entry): Promise<Buffer>;
}
